interface CreateComicChap {
  name: String!
  description: String
  SessionID: String!
}
input CreateComicChapInput {
  name: String!
  description: String
  SessionID: String!
}
type CreateComicChapInputModel implements CreateComicChap {
  name: String!
  description: String
  CreatedByID: String!
  SessionID: String!
}
type ImageResult{
  ID: String!
  Url: String!
}
type ComicChap implements CreateComic {
  _id: ID!
  createdAt: Time!
  updatedAt: Time!
  CreatedBy: User @goField(forceResolver: true)
  CreatedByID: String!
  name: String!
  description: String
  SessionId: String!
  Session: ComicSession! @goField(forceResolver: true)
  Images: [ImageResult!]!
}
extend type Mutation {
  CreateComicChap(input: CreateComicChapInput!): ComicChap!
    @goField(forceResolver: true)
    @auth
  AddImageToChap(req: [UploadFile!]!, chapID: String!): ComicChap!
    @goField(forceResolver: true)
    @auth
}

input UploadFile {
  id: Int!
  file: Upload!
}

extend type Query {
  ChapBySession(SessionID: String!): [ComicChap!] @goField(forceResolver: true)
}
