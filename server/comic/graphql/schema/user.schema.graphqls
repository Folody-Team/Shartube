scalar Time

input RegisterUserInput {
  username: String!
  email: String! @emailInput
  password: String!
}

input LoginUserInput {
  UsernameOrEmail: String!
  password: String!
}
type UserModelInput {
  _id: ID!
  username: String!
  email: String!
  password: String
  createdAt: Time!
  updatedAt: Time!
  comicIDs: [String!]
}
type User {
  _id: ID!
  username: String!
  email: String!
  password: String
  createdAt: Time!
  updatedAt: Time!
  comics: [Comic!] @goField(forceResolver: true)
  comicIDs: [String!]
}
type UserLoginOrRegisterResponse {
  user: User!
  accessToken: String!
}
extend type Mutation {
  Login(input: LoginUserInput!): UserLoginOrRegisterResponse!
    @goField(forceResolver: true)
  Register(input: RegisterUserInput!): UserLoginOrRegisterResponse!
    @goField(forceResolver: true)
}

extend type Query {
  Me: User! @goField(forceResolver: true) @auth
}
