import { Directive, DirectiveDefinition, FieldDefinition, NamedType, Schema, SchemaRootKind } from "./definitions";
export declare type PrintOptions = {
    indentString: string;
    definitionsOrder: ('schema' | 'types' | 'directives')[];
    rootTypesOrder: SchemaRootKind[];
    typeCompareFn?: (t1: NamedType, t2: NamedType) => number;
    directiveCompareFn?: (d1: DirectiveDefinition, d2: DirectiveDefinition) => number;
    mergeTypesAndExtensions: boolean;
    showAllBuiltIns: boolean;
    noDescriptions: boolean;
    directiveDefinitionFilter?: (d: DirectiveDefinition) => boolean;
    typeFilter: (t: NamedType) => boolean;
    fieldFilter: (f: FieldDefinition<any>) => boolean;
    directiveApplicationFilter: (d: Directive) => boolean;
};
export declare const defaultPrintOptions: PrintOptions;
export declare function orderPrintedDefinitions(options: PrintOptions): PrintOptions;
export declare function printSchema(schema: Schema, options?: PrintOptions): string;
export declare function printType(type: NamedType, options?: PrintOptions): string;
export declare function printTypeDefinitionAndExtensions(type: NamedType, options?: PrintOptions): string[];
export declare function printDirectiveDefinition(directive: DirectiveDefinition, options: PrintOptions): string;
//# sourceMappingURL=print.d.ts.map