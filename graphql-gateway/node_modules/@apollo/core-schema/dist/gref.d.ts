import LinkUrl from './link-url';
export declare class GRef {
    readonly name: string;
    readonly graph?: LinkUrl | undefined;
    static canon(name: string, graph?: LinkUrl): GRef;
    static named(name: string, graph?: LinkUrl | string): GRef;
    static directive(name: string, graph?: LinkUrl | string): GRef;
    static rootDirective(graph?: LinkUrl | string): GRef;
    static schema(graph?: LinkUrl | string): GRef;
    setGraph(graph?: LinkUrl | string): GRef;
    setName(name: string): GRef;
    toString(): string;
    isSchema(): boolean;
    private constructor();
}
export default GRef;
export interface HasGref {
    gref: GRef;
}
export declare const byGref: <T extends any>(...sources: Iterable<T>[]) => Readonly<Map<GRef, Iterable<T>>>;
//# sourceMappingURL=gref.d.ts.map