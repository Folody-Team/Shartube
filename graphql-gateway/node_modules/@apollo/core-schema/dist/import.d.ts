import { ConstDirectiveNode, DirectiveNode, Location, NamedTypeNode } from 'graphql';
import { Parser } from 'graphql/language/parser';
export declare type ImportTermNode = DirectiveNode | NamedTypeNode;
export interface ImportNode<T extends ImportTermNode = ImportTermNode> {
    type: 'Import';
    element: T;
    alias?: T;
    loc?: Location;
}
export declare class ImportsParser extends Parser {
    static fromString(source: string): ImportNode<ImportTermNode>[];
    parseImports(): ImportNode[];
    parseImport(): ImportNode<ImportTermNode>;
    parseImportElement(): NamedTypeNode | ConstDirectiveNode;
    parseDirectiveName(): ConstDirectiveNode;
}
//# sourceMappingURL=import.d.ts.map