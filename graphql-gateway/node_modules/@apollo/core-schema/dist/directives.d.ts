import { ASTNode, DefinitionNode, DirectiveNode, DocumentNode, SchemaDefinitionNode, SchemaExtensionNode } from 'graphql';
export declare type HasDirectives = DocumentNode | ASTNode & {
    directives?: DirectiveNode[];
};
export declare const schemaDefinitions: import("@protoplasm/recall").Replay<(defs: Iterable<DefinitionNode>) => Iterator<SchemaDefinitionNode | SchemaExtensionNode>>;
export declare const directives: import("@protoplasm/recall").Replay<(target: HasDirectives) => Generator<DirectiveNode, void, undefined>>;
export default directives;
//# sourceMappingURL=directives.d.ts.map