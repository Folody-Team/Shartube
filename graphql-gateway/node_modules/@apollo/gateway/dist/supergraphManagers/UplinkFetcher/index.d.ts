import type { Logger } from '@apollo/utils.logger';
import { SupergraphManager, SupergraphSdlHookOptions } from '../../config';
import { Fetcher } from '@apollo/utils.fetcher';
export interface UplinkFetcherOptions {
    fallbackPollIntervalInMs: number;
    subgraphHealthCheck?: boolean;
    graphRef: string;
    apiKey: string;
    fetcher: Fetcher;
    maxRetries: number;
    uplinkEndpoints: string[];
    logger?: Logger;
}
export declare class UplinkFetcher implements SupergraphManager {
    private config;
    private update?;
    private healthCheck?;
    private timerRef;
    private state;
    private errorReportingEndpoint;
    private compositionId?;
    private fetchCount;
    private minDelayMs;
    private earliestFetchTime;
    constructor(options: UplinkFetcherOptions);
    initialize({ update, healthCheck }: SupergraphSdlHookOptions): Promise<{
        supergraphSdl: string;
        cleanup: () => Promise<void>;
    }>;
    private updateSupergraphSdl;
    private beginPolling;
    private poll;
    private logUpdateFailure;
}
//# sourceMappingURL=index.d.ts.map